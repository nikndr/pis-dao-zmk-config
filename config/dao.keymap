/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#define HOST_OS 2

#include "zmk-helpers/helper.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&sk {
    release-after-ms = <450>;
    quick-release;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    chosen {
        zmk,physical_layout = &dao_crkbd_layout;

        // zmk,physical_layout = &dao_full_layout;
    };
};

/ {
    behaviors {
        stl: switch_to_layer {
            compatible = "zmk,behavior-toggle-layer";
            label = "SWITCH_TO_LAYER";
            #binding-cells = <1>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };

        td_shift: tap_dance_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&caps_word>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        sc_part: sc_part {
            compatible = "zmk,behavior-tap-dance";
            label = "SC_PART";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4))>, <&kp LS(LG(NUMBER_5))>;
        };

        sc_full: sc_full {
            compatible = "zmk,behavior-tap-dance";
            label = "SC_FULL";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_1))>, <&kp LS(LA(LG(NUMBER_3)))>;
        };

        th_hold: th_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TH_HOLD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
        };

        mt_esc: meh_tab_esc {
            compatible = "zmk,behavior-mod-morph";
            label = "MEH_TAB_ESC";
            bindings = <&th_hold LC(LA(LEFT_SHIFT)) TAB>, <&kp ESCAPE>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_hardware {
            bindings = <&tog 4>;
            key-positions = <5 17 29>; // t g b keys
            layers = <0>;
        };
    };

    macros {
        log_hrd_lyr: log_hrd_lyr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(H) &kp LS(A) &kp LS(R) &kp LS(D) &kp LS(W) &kp LS(A) &kp LS(R) &kp LS(E) &kp SPACE &kp LS(L) &kp LS(A) &kp LS(Y) &kp LS(E) &kp LS(R)>;
            label = "LOG_HRD_LYR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "MAIN";
            bindings = <
&kp GRAVE      &kp Q              &kp W         &kp E                            &kp R           &kp T        &kp Y      &kp U          &kp I                      &kp O         &kp P                  &kp LBKT
&kp RBKT       &hml LEFT_SHIFT A  &hml LCTRL S  &hml LALT D                      &hml LMETA F    &kp G        &kp H      &hmr RMETA J   &hmr RALT K                &hmr RCTRL L  &hmr RIGHT_SHIFT SEMI  &kp SQT
&kp BACKSLASH  &kp Z              &kp X         &kp C                            &kp V           &kp B        &kp N      &kp M          &kp COMMA                  &kp DOT       &kp FSLH               &kp LC(SPACE)
                                                &th_hold LA(LC(LEFT_SHIFT)) TAB  &sk LEFT_SHIFT  &lt 1 SPACE  &lt 2 RET  &kp BACKSPACE  &th_hold RIGHT_ALT ESCAPE
            >;
        };

        controls {
            display-name = "CTL";
            bindings = <
&trans  &trans     &trans     &trans    &trans    &trans  &kp LG(LEFT_BRACKET)  &kp LG(Z)      &kp LS(LG(Z))  &kp LG(RIGHT_BRACKET)  &trans  &trans
&trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans  &kp LEFT              &kp DOWN       &kp UP_ARROW   &kp RIGHT              &trans  &trans
&trans  &trans     &trans     &trans    &trans    &trans  &kp HOME              &kp PAGE_DOWN  &kp PAGE_UP    &kp END                &trans  &trans
                              &trans    &trans    &trans  &trans                &kp DELETE     &trans
            >;
        };

        characters {
            display-name = "SYM";
            bindings = <
&trans  &kp EXCLAMATION   &kp AT_SIGN    &kp POUND       &kp DOLLAR            &kp PERCENT     &kp CARET  &kp AMPS               &kp ASTERISK     &kp KP_MINUS      &kp KP_PLUS        &trans
&trans  &kp N1            &kp N2         &kp N3          &kp N4                &kp N5          &kp N6     &kp N7                 &kp N8           &kp N9            &kp N0             &trans
&trans  &kp LEFT_BRACKET  &kp LESS_THAN  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp UNDERSCORE  &kp EQUAL  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp GREATER_THAN  &kp RIGHT_BRACKET  &trans
                                         &trans          &trans                &trans          &trans     &trans                 &trans
            >;
        };

        function {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3    &kp F4    &kp F5  &kp F6                &kp F7             &kp F8           &kp F9            &kp F10  &trans
&trans  &trans  &trans  &sc_full  &sc_part  &trans  &kp C_BRIGHTNESS_INC  &kp K_PREVIOUS     &kp K_NEXT       &kp K_PLAY_PAUSE  &kp F11  &trans
&trans  &trans  &trans  &trans    &trans    &trans  &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE        &kp F12  &trans
                        &trans    &trans    &trans  &trans                &trans             &trans
            >;

            label = "FCN";
        };

        hardware {
            display-name = "ADJ";
            bindings = <
&bootloader  &studio_unlock  &none         &none         &none         &none         &none         &none         &none         &none         &studio_unlock  &bootloader
&bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &bt BT_CLR
&sys_reset   &none           &none         &none         &none         &log_hrd_lyr  &log_hrd_lyr  &none         &none         &none         &none           &sys_reset
                                           &trans        &to 0         &to 0         &to 0         &to 0         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        function_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/*
 *    0   1   2   3   4   5     6   7   8   9  10  11
 *   12  13  14  15  16  17    18  19  20  21  22  23
 *   24  25  26  27  28  29    30  31  32  33  34  35
 *               36  37  38    39  40  41
 */
